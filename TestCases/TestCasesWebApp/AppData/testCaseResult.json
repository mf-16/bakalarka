{"Name":"space_in_prefix","Result":false,"SerializedDocument":null,"DeserializedDocument":null,"Exception":"javax.xml.stream.XMLStreamException: Illegal name character ' ' (code 32) in name \"ex ex\" (index #2)\r\n\tat com.ctc.wstx.sw.XmlWriter.throwOutputError(XmlWriter.java:603)\r\n\tat com.ctc.wstx.sw.XmlWriter.reportNwfName(XmlWriter.java:584)\r\n\tat com.ctc.wstx.sw.XmlWriter.verifyNameValidity(XmlWriter.java:571)\r\n\tat com.ctc.wstx.sw.BufferingXmlWriter.writeAttribute(BufferingXmlWriter.java:1022)\r\n\tat com.ctc.wstx.sw.BaseNsStreamWriter.doWriteNamespace(BaseNsStreamWriter.java:572)\r\n\tat com.ctc.wstx.sw.RepairingNsStreamWriter.writeNamespace(RepairingNsStreamWriter.java:182)\r\n\tat org.openprovenance.prov.core.xml.serialization.stax.WrappedXMLStreamWriter2.writeNamespace(WrappedXMLStreamWriter2.java:329)\r\n\tat org.openprovenance.prov.core.xml.serialization.stax.StaxStreamWriterUtil.writeNamespace(StaxStreamWriterUtil.java:29)\r\n\tat org.openprovenance.prov.core.xml.serialization.serial.CustomQualifiedNameSerializer.serialize(CustomQualifiedNameSerializer.java:29)\r\n\tat org.openprovenance.prov.core.xml.serialization.serial.CustomQualifiedNameSerializer.serialize(CustomQualifiedNameSerializer.java:12)\r\n\tat com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)\r\n\tat com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.serializeFields(XmlBeanSerializerBase.java:212)\r\n\tat com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeWithType(BeanSerializerBase.java:655)\r\n\tat com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.serializeWithType(XmlBeanSerializerBase.java:336)\r\n\tat com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:147)\r\n\tat com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)\r\n\tat com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)\r\n\tat com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)\r\n\tat com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.serializeFields(XmlBeanSerializerBase.java:212)\r\n\tat com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.serialize(XmlBeanSerializer.java:129)\r\n\tat com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.serializeValue(XmlSerializerProvider.java:108)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._writeValueAndClose(ObjectMapper.java:4719)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.writeValue(ObjectMapper.java:3923)\r\n\tat org.openprovenance.prov.core.xml.serialization.ProvSerialiser.serialiseDocument(ProvSerialiser.java:78)\r\n\tat org.openprovenance.prov.core.xml.serialization.ProvSerialiser.serialiseDocument(ProvSerialiser.java:71)\r\n\tat org.openprovenance.prov.core.xml.serialization.ProvSerialiser.serialiseDocument(ProvSerialiser.java:66)\r\n\tat org.openprovenance.prov.interop.InteropFramework.serialiseDocument(InteropFramework.java:762)\r\n\tat org.openprovenance.prov.interop.InteropFramework.writeDocument(InteropFramework.java:1107)\r\n\tat cz.muni.fi.bthesis.TestCase.writeDocument(TestCase.java:46)\r\n\tat cz.muni.fi.bthesis.TestCase.serialize(TestCase.java:22)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat cz.muni.fi.bthesis.Main.main(Main.java:35)\r\njava.io.IOException: javax.xml.stream.XMLStreamException: Illegal name character ' ' (code 32) in name \"ex ex\" (index #2)\r\n\tat org.openprovenance.prov.core.xml.serialization.stax.StaxStreamWriterUtil.writeNamespace(StaxStreamWriterUtil.java:32)\r\n\tat org.openprovenance.prov.core.xml.serialization.serial.CustomQualifiedNameSerializer.serialize(CustomQualifiedNameSerializer.java:29)\r\n\tat org.openprovenance.prov.core.xml.serialization.serial.CustomQualifiedNameSerializer.serialize(CustomQualifiedNameSerializer.java:12)\r\n\tat com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)\r\n\tat com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.serializeFields(XmlBeanSerializerBase.java:212)\r\n\tat com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeWithType(BeanSerializerBase.java:655)\r\n\tat com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.serializeWithType(XmlBeanSerializerBase.java:336)\r\n\tat com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:147)\r\n\tat com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)\r\n\tat com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)\r\n\tat com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)\r\n\tat com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.serializeFields(XmlBeanSerializerBase.java:212)\r\n\tat com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.serialize(XmlBeanSerializer.java:129)\r\n\tat com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.serializeValue(XmlSerializerProvider.java:108)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._writeValueAndClose(ObjectMapper.java:4719)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.writeValue(ObjectMapper.java:3923)\r\n\tat org.openprovenance.prov.core.xml.serialization.ProvSerialiser.serialiseDocument(ProvSerialiser.java:78)\r\n\tat org.openprovenance.prov.core.xml.serialization.ProvSerialiser.serialiseDocument(ProvSerialiser.java:71)\r\n\tat org.openprovenance.prov.core.xml.serialization.ProvSerialiser.serialiseDocument(ProvSerialiser.java:66)\r\n\tat org.openprovenance.prov.interop.InteropFramework.serialiseDocument(InteropFramework.java:762)\r\n\tat org.openprovenance.prov.interop.InteropFramework.writeDocument(InteropFramework.java:1107)\r\n\tat cz.muni.fi.bthesis.TestCase.writeDocument(TestCase.java:46)\r\n\tat cz.muni.fi.bthesis.TestCase.serialize(TestCase.java:22)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat cz.muni.fi.bthesis.Main.main(Main.java:35)\r\nCaused by: javax.xml.stream.XMLStreamException: Illegal name character ' ' (code 32) in name \"ex ex\" (index #2)\r\n\tat com.ctc.wstx.sw.XmlWriter.throwOutputError(XmlWriter.java:603)\r\n\tat com.ctc.wstx.sw.XmlWriter.reportNwfName(XmlWriter.java:584)\r\n\tat com.ctc.wstx.sw.XmlWriter.verifyNameValidity(XmlWriter.java:571)\r\n\tat com.ctc.wstx.sw.BufferingXmlWriter.writeAttribute(BufferingXmlWriter.java:1022)\r\n\tat com.ctc.wstx.sw.BaseNsStreamWriter.doWriteNamespace(BaseNsStreamWriter.java:572)\r\n\tat com.ctc.wstx.sw.RepairingNsStreamWriter.writeNamespace(RepairingNsStreamWriter.java:182)\r\n\tat org.openprovenance.prov.core.xml.serialization.stax.WrappedXMLStreamWriter2.writeNamespace(WrappedXMLStreamWriter2.java:329)\r\n\tat org.openprovenance.prov.core.xml.serialization.stax.StaxStreamWriterUtil.writeNamespace(StaxStreamWriterUtil.java:29)\r\n\t... 27 more\r\nException in thread \"main\" java.lang.RuntimeException: Error running Java class\r\n\tat cz.muni.fi.bthesis.Main.main(Main.java:37)\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat cz.muni.fi.bthesis.Main.main(Main.java:35)\r\nCaused by: org.openprovenance.prov.model.exception.UncheckedException: Unchecked Exception\r\n\tat org.openprovenance.prov.core.xml.serialization.ProvSerialiser.serialiseDocument(ProvSerialiser.java:81)\r\n\tat org.openprovenance.prov.core.xml.serialization.ProvSerialiser.serialiseDocument(ProvSerialiser.java:71)\r\n\tat org.openprovenance.prov.core.xml.serialization.ProvSerialiser.serialiseDocument(ProvSerialiser.java:66)\r\n\tat org.openprovenance.prov.interop.InteropFramework.serialiseDocument(InteropFramework.java:762)\r\n\tat org.openprovenance.prov.interop.InteropFramework.writeDocument(InteropFramework.java:1107)\r\n\tat cz.muni.fi.bthesis.TestCase.writeDocument(TestCase.java:46)\r\n\tat cz.muni.fi.bthesis.TestCase.serialize(TestCase.java:22)\r\n\t... 5 more\r\nCaused by: java.io.IOException: javax.xml.stream.XMLStreamException: Illegal name character ' ' (code 32) in name \"ex ex\" (index #2)\r\n\tat org.openprovenance.prov.core.xml.serialization.stax.StaxStreamWriterUtil.writeNamespace(StaxStreamWriterUtil.java:32)\r\n\tat org.openprovenance.prov.core.xml.serialization.serial.CustomQualifiedNameSerializer.serialize(CustomQualifiedNameSerializer.java:29)\r\n\tat org.openprovenance.prov.core.xml.serialization.serial.CustomQualifiedNameSerializer.serialize(CustomQualifiedNameSerializer.java:12)\r\n\tat com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)\r\n\tat com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.serializeFields(XmlBeanSerializerBase.java:212)\r\n\tat com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeWithType(BeanSerializerBase.java:655)\r\n\tat com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.serializeWithType(XmlBeanSerializerBase.java:336)\r\n\tat com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:147)\r\n\tat com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)\r\n\tat com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)\r\n\tat com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)\r\n\tat com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.serializeFields(XmlBeanSerializerBase.java:212)\r\n\tat com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.serialize(XmlBeanSerializer.java:129)\r\n\tat com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.serializeValue(XmlSerializerProvider.java:108)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._writeValueAndClose(ObjectMapper.java:4719)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.writeValue(ObjectMapper.java:3923)\r\n\tat org.openprovenance.prov.core.xml.serialization.ProvSerialiser.serialiseDocument(ProvSerialiser.java:78)\r\n\t... 11 more\r\nCaused by: javax.xml.stream.XMLStreamException: Illegal name character ' ' (code 32) in name \"ex ex\" (index #2)\r\n\tat com.ctc.wstx.sw.XmlWriter.throwOutputError(XmlWriter.java:603)\r\n\tat com.ctc.wstx.sw.XmlWriter.reportNwfName(XmlWriter.java:584)\r\n\tat com.ctc.wstx.sw.XmlWriter.verifyNameValidity(XmlWriter.java:571)\r\n\tat com.ctc.wstx.sw.BufferingXmlWriter.writeAttribute(BufferingXmlWriter.java:1022)\r\n\tat com.ctc.wstx.sw.BaseNsStreamWriter.doWriteNamespace(BaseNsStreamWriter.java:572)\r\n\tat com.ctc.wstx.sw.RepairingNsStreamWriter.writeNamespace(RepairingNsStreamWriter.java:182)\r\n\tat org.openprovenance.prov.core.xml.serialization.stax.WrappedXMLStreamWriter2.writeNamespace(WrappedXMLStreamWriter2.java:329)\r\n\tat org.openprovenance.prov.core.xml.serialization.stax.StaxStreamWriterUtil.writeNamespace(StaxStreamWriterUtil.java:29)\r\n\t... 27 more","Description":"Java allows to create prefix with space in memory, because it does no validation in the [Namespace#register()](https://github.com/lucmoreau/ProvToolbox/blob/master/modules-core/prov-model/src/main/java/org/openprovenance/prov/model/Namespace.java#L124).\r\n\r\nWhen serializing XML format, Java uses the [jackson](https://github.com/FasterXML/jackson) library. When serializing the \"ex ex:e\" qualified name Java uses [CustomQualifiedNameSerializer#serialize()](https://github.com/lucmoreau/ProvToolbox/blob/60f1e87f9f072ef390ca05c0b39dc5c0a7d17e9c/modules-core/prov-jsonld-xml/src/main/java/org/openprovenance/prov/core/xml/serialization/serial/CustomQualifiedNameSerializer.java#L23) method, which always writes the namespace to the XML document.\r\nIn this method on line 29:\r\n\r\n\\`\\`\\`StaxStreamWriterUtil.writeNamespace(jsonGenerator, prefix, q.getNamespaceURI());\\`\\`\\`\r\n \r\nthe writeNamespace() uses [BufferingXmlWriter#writeAttribute()](https://github.com/FasterXML/woodstox/blob/master/src/main/java/com/ctc/wstx/sw/BufferingXmlWriter.java#L1014) method. In this method the validity of prefix is checked on line 1022.\r\n\r\n\\`\\`\\`this.verifyNameValidity(localName, this.mNsAware);\\`\\`\\`\r\n\r\nThis throws the exception:  \\`\\`\\`Illegal name character ' ' (code 32) in name \"ex ex\" (index #2)\\`\\`\\`\r\n\r\nPython does not get any file to deserialize."}