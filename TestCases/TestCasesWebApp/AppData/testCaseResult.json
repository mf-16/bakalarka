{"Name":"space_in_prefix","Result":false,"SerializedDocument":null,"DeserializedDocument":null,"Exception":"Traceback (most recent call last):\r\n  File \"C:\\Users\\forma\\bakalarka\\python-prov\\src\\main.py\", line 33, in <module>\r\n    class_.serialize(sys.argv[2])\r\n  File \"C:\\Users\\forma\\bakalarka\\python-prov\\src\\test_case.py\", line 18, in serialize\r\n    document.serialize(file_path, format=format_type, indent=2)\r\n  File \"C:\\Users\\forma\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\prov\\model.py\", line 2494, in serialize\r\n    serializer.serialize(stream, **args)\r\n  File \"C:\\Users\\forma\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\prov\\serializers\\provxml.py\", line 52, in serialize\r\n    xml_root = self.serialize_bundle(bundle=self.document, force_types=force_types)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\forma\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\prov\\serializers\\provxml.py\", line 110, in serialize_bundle\r\n    xml_bundle_root = etree.Element(_ns_prov(\"document\"), nsmap=nsmap)\r\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"src\\lxml\\etree.pyx\", line 3042, in lxml.etree.Element\r\n  File \"src\\lxml\\apihelpers.pxi\", line 131, in lxml.etree._makeElement\r\n  File \"src\\lxml\\apihelpers.pxi\", line 118, in lxml.etree._makeElement\r\n  File \"src\\lxml\\apihelpers.pxi\", line 219, in lxml.etree._setNodeNamespaces\r\n  File \"src\\lxml\\apihelpers.pxi\", line 1769, in lxml.etree._prefixValidOrRaise\r\nValueError: Invalid namespace prefix 'ex ex'","Description":"Python when creating the document in memory uses def add_namespace(self, namespace): method, which does not validate the prefix, so it allows prefix with the space.\r\n\r\nPython when serializing in PROVN just writes all namespaces and does no validation\r\nif registered_namespaces:\r\n            lines.extend(\r\n                [\r\n                    \"prefix %s <%s>\" % (namespace.prefix, namespace.uri)\r\n                    for namespace in registered_namespaces\r\n                ]\r\n            )\r\n\r\nWhen serializing this document into XML, Python uses method def serialize_bundle(self, bundle, element=None, force_types=False):\r\nIn this method it creates the nsmap, which is map containing all hte namespaces\r\n\r\nnsmap = {\r\n            ns.prefix: ns.uri\r\n            for ns in self.document._namespaces.get_registered_namespaces()\r\n        }\r\n        if self.document._namespaces._default:\r\n            nsmap[None] = self.document._namespaces._default.uri\r\n        for namespace in bundle.namespaces:\r\n            if namespace not in nsmap:\r\n                nsmap[namespace.prefix] = namespace.uri\r\n\r\n        for key, value in DEFAULT_NAMESPACES.items():\r\n            uri = value.uri\r\n            if value.prefix == \"xsd\":\r\n                # The XSD namespace for some reason has no hash at the end\r\n                # for PROV XML, but for all other serializations it does.\r\n                uri = uri.rstrip(\"#\")\r\n            nsmap[value.prefix] = uri\r\n\r\nand then uses etree from lxml library to create xml root element.\r\n\r\nxml_bundle_root = etree.Element(_ns_prov(\"document\"), nsmap=nsmap)\r\n\r\nBut somewhere in this method validation on prefix takes place and it throws exception:  ValueError: Invalid namespace prefix 'ex ex' \r\n\r\nJava does not have any file to deserialize."}