{"Name":"prov_record_without_id","Result":true,"SerializedDocument":"{\r\n  \"prefix\" : {\r\n    \"xsd\" : \"http://www.w3.org/2001/XMLSchema#\",\r\n    \"_\" : \"https://openprovenance.org/blank#\",\r\n    \"ex\" : \"https://example.org/\",\r\n    \"prov\" : \"http://www.w3.org/ns/prov#\"\r\n  },\r\n  \"entity\" : {\r\n    \"ex:e\" : { }\r\n  },\r\n  \"activity\" : {\r\n    \"ex:a\" : { }\r\n  },\r\n  \"wasGeneratedBy\" : {\r\n    \"_:n1\" : {\r\n      \"prov:entity\" : \"ex:e\",\r\n      \"prov:activity\" : \"ex:a\"\r\n    }\r\n  }\r\n}","DeserializedDocument":"{\r\n  \"prefix\": {\r\n    \"_\": \"https://openprovenance.org/blank#\",\r\n    \"ex\": \"https://example.org/\"\r\n  },\r\n  \"entity\": {\r\n    \"ex:e\": {}\r\n  },\r\n  \"activity\": {\r\n    \"ex:a\": {}\r\n  },\r\n  \"wasGeneratedBy\": {\r\n    \"_:id1\": {\r\n      \"prov:entity\": \"ex:e\",\r\n      \"prov:activity\": \"ex:a\"\r\n    }\r\n  }\r\n}","Exception":null,"Description":"When serializing JSON format, Java uses [jackson](https://github.com/FasterXML/jackson) library. Before serialization, [SortedDocument](https://github.com/lucmoreau/ProvToolbox/blob/8b35e876dbda7f55a95dd182b78f7a28a5147a21/modules-core/prov-jsonld/src/main/java/org/openprovenance/prov/core/json/serialization/SortedDocument.java) object is creted on line 45 in [ProvSerializer#serialiseDocument()](https://github.com/lucmoreau/ProvToolbox/blob/8b35e876dbda7f55a95dd182b78f7a28a5147a21/modules-core/prov-jsonld/src/main/java/org/openprovenance/prov/core/json/serialization/ProvSerialiser.java#L38) method.\r\n\r\n\\`mapper.writeValue(out,new SortedDocument(document));\\`\r\n\r\nThe SortedDocument is subclass of [SortedBundle](https://github.com/lucmoreau/ProvToolbox/blob/8b35e876dbda7f55a95dd182b78f7a28a5147a21/modules-core/prov-jsonld/src/main/java/org/openprovenance/prov/core/json/serialization/SortedBundle.java), which has all records in HashMaps, ready for JSON serialization.\r\nThe blank id is created in [SortedBundle#put()](https://github.com/lucmoreau/ProvToolbox/blob/8b35e876dbda7f55a95dd182b78f7a28a5147a21/modules-core/prov-jsonld/src/main/java/org/openprovenance/prov/core/json/serialization/SortedBundle.java#L40) method on line 44, by [SortedBundle#gensym()](https://github.com/lucmoreau/ProvToolbox/blob/8b35e876dbda7f55a95dd182b78f7a28a5147a21/modules-core/prov-jsonld/src/main/java/org/openprovenance/prov/core/json/serialization/SortedBundle.java#L57) method.\r\n\r\n\\`map.put(gensym(), (T) s);\\`\r\n\r\nWhen serializing namespaces, Java also adds blank namespace into the them as you can see in serialized document.\r\n\r\nPython when deserializing uses __TODOVLOZMENOLIBRARY__ library and when converting string \"_:n0\" to valid qualified name it used method def valid_qualified_name(self, qname):\r\nstr_value = qname.uri if isinstance(qname, Identifier) else str(qname)\r\nif str_value.startswith(\"_:\"):\r\n            # this is a blank node ID\r\n            return None\r\nIt gets to this line where str_value=\"_:n0\" since its not Identifier but string and Python treats everyting that starts with \"_:\" as blank node, so the blank node namespace Java added is not even needed, but its serialized as well."}