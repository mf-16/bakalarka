In Java object that have value implement interface HasValue which looks like this:
public interface HasValue {
    Value getValue();

    void setValue(Value var1);
}
Only Entity class implements HasValue, since PROV-N states that prov:value arguments should only be in entity.
So when trying to create a document with prov:value as a argument, Java in public void setAttributes(HasOther res, Collection<Attribute> attributes) method always checks if the object implements HasValue like this:

HasValue aval = res instanceof HasValue ? (HasValue)res : null;
when it does not implement HasValue, in our case Activity, just ignore it.
case PROV_VALUE:
                            if (aval != null) {
                                aval.setValue(this.newValue(aValue, attr.getType()));
                            }
                            break;

So the serialized document has no value.

PROVN deserialization in python is not implemented yet. 
As stated in https://pypi.org/project/prov/, "In-memory classes for PROV assertions, which can then be output as PROV-N", implicating that only PROV-N serialization is supported.
It has been worked on but abandoned as you can see in this issue on libraries github https://github.com/trungdong/prov/issues/122.
