Java when serializing generates blank id's when SortedDocument is created before serialization more specifically in the put method.
<T extends Statement> void put(Map<QualifiedName, T> map, StatementOrBundle s) {
        if (s instanceof Identifiable) {
            Identifiable iS = (Identifiable)s;
            if (iS.getId() == null) {
                map.put(this.gensym(), (Statement)s);
            } else {
                map.put(iS.getId(), (Statement)s);
            }
        } else {
            map.put(this.gensym(), (Statement)s);
        }

    }

map is map of all wasGeneratedBy records as values and their identifiers as keys. You can see that if no key is null, key with blank namespace is generated by gensym() method.
public QualifiedName gensym() {
        return new org.openprovenance.prov.vanilla.QualifiedName(bnNS, "n" + count++, "_");
    }
where bnNs=constant for blank namespace
Java also adds blank namespace into the namespaces.

Python when deserializing uses __TODOVLOZMENOLIBRARY__ library and when converting string "_:n0" to valid qualified name it used method def valid_qualified_name(self, qname):
str_value = qname.uri if isinstance(qname, Identifier) else str(qname)
if str_value.startswith("_:"):
            # this is a blank node ID
            return None
It gets to this line where str_value="_:n0" since its not Identifier but string and Python treats everyting that starts with "_:" as blank node, so the blank node namespace Java added is not even needed, but its serialized as well.