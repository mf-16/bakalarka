When creating new QualifiedName with method [Namespace#newQualifiedName()](https://github.com/lucmoreau/ProvToolbox/blob/ca05849c88a84aae736355569a8bdae78c68b072/modules-core/prov-model/src/main/java/org/openprovenance/prov/model/Namespace.java#L271), there is no validation in [constructor of QualifiedName](https://github.com/lucmoreau/ProvToolbox/blob/ca05849c88a84aae736355569a8bdae78c68b072/modules-core/prov-model/src/main/java/org/openprovenance/prov/vanilla/QualifiedName.java#L15) and also when creating a new entity with method [ProvFactory#newEntity()](https://github.com/lucmoreau/ProvToolbox/blob/ca05849c88a84aae736355569a8bdae78c68b072/modules-core/prov-model/src/main/java/org/openprovenance/prov/vanilla/ProvFactory.java#L166) and setting identifier in [Entity constructor](https://github.com/lucmoreau/ProvToolbox/blob/ca05849c88a84aae736355569a8bdae78c68b072/modules-core/prov-model/src/main/java/org/openprovenance/prov/vanilla/Entity.java#L31), there is no validation.
This means that we can create invalid identifiers in ProvToolbox.

When serializing PROV-JSON format, the identifier is not validated.
However, this is not wrong since the serializer should not expect ProvToolbox to generate a PROV document with an invalid QualifiedName. The problem arises in the model where an invalid QualifiedName can be generated.

When deserializing from PROV-JSON format, Prov Python uses the [json](https://docs.python.org/3/library/json.html) library, more specifically, the json.load() function, which takes a custom decoder.
The custom decoder in [provjson](https://github.com/trungdong/prov/blob/master/src/prov/serializers/provjson.py) module is [ProvJSONDecoder](https://github.com/trungdong/prov/blob/master/src/prov/serializers/provjson.py#L101).
When deserializing the entity, deserializer first reads the identifier, then in function [decode_json_container()](https://github.com/trungdong/prov/blob/1cb710a26c623c5c706b1c6945c645efd9e925c0/src/prov/serializers/provjson.py#L199), on line 277, [ProvBundle#new_record()](https://github.com/trungdong/prov/blob/1cb710a26c623c5c706b1c6945c645efd9e925c0/src/prov/model.py#L1578) method is called with identifier \`ex:a b c\`:

\`bundle.new_record(rec_type, rec_id, attributes, other_attributes)\`

In ProvBundle#new_record(), when creating new record with identifier, [ProvBundle#valid_qualified_name()](https://github.com/trungdong/prov/blob/1cb710a26c623c5c706b1c6945c645efd9e925c0/src/prov/model.py#L1357) method is called on line 1604:
\`\`\`
new_record = PROV_REC_CLS[record_type](
    self, self.valid_qualified_name(identifier), attr_list
)
\`\`\`

ProvBundle#valid_qualified_name() just calls [NamespaceManager#valid_qualified_name()](https://github.com/trungdong/prov/blob/1cb710a26c623c5c706b1c6945c645efd9e925c0/src/prov/model.py#L1139). There is no validation of QualifiedName in this method. 

Therefore, Prov Python creates a document with an invalid identifier.