When new namespace is created in memory [Namespace#register()](https://github.com/lucmoreau/ProvToolbox/blob/ca05849c88a84aae736355569a8bdae78c68b072/modules-core/prov-model/src/main/java/org/openprovenance/prov/model/Namespace.java#L124) is used. This method does no validation of the URI.
Therefore, Java allows document with URI with space to be created in memory. 

When serializing JSON format, there is no validation of URI.
But this is not wrong, since the serializer should not expect that PROV document with invalid URI can be generated by Java. Its the model where invalid URI can be generated, where the issue starts.

When deserializing JSON format Python uses the [json](https://docs.python.org/3/library/json.html) library, more specifically the json.load() function which takes custom decoder.
The custom decoder in [provjson](https://github.com/trungdong/prov/blob/master/src/prov/serializers/provjson.py) module is [ProvJSONDecoder](https://github.com/trungdong/prov/blob/master/src/prov/serializers/provjson.py#L101).
When deserializing the entity, deserializer first reads the URI, then in function [decode_json_container()](https://github.com/trungdong/prov/blob/1cb710a26c623c5c706b1c6945c645efd9e925c0/src/prov/serializers/provjson.py#L199), on line 204, just uses [Namespace constructor](https://github.com/trungdong/prov/blob/1cb710a26c623c5c706b1c6945c645efd9e925c0/src/prov/identifier.py#L85C9-L85C17) and [ProvBundle#add_namespace()](https://github.com/trungdong/prov/blob/1cb710a26c623c5c706b1c6945c645efd9e925c0/src/prov/model.py#L1335) which just calls [NamespaceManager#add_namespace()](https://github.com/trungdong/prov/blob/master/src/prov/model.py#L1080). There is not validation of URI.

\`bundle.add_namespace(Namespace(prefix, uri))\`

Therefore, you can create a document with invalid URI in Python.