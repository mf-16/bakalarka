Prov Python allows the creation of a document with an invalid IRI in memory. When registering a namespace in Prov Python, we use [ProvBundle#add_namespace()](https://github.com/trungdong/prov/blob/1cb710a26c623c5c706b1c6945c645efd9e925c0/src/prov/model.py#L1335) method, which just uses [NamespaceManager#add_namespace()](https://github.com/trungdong/prov/blob/master/src/prov/model.py#L1080) method and [Namespace constructor](https://github.com/trungdong/prov/blob/1cb710a26c623c5c706b1c6945c645efd9e925c0/src/prov/identifier.py#L85C9-L85C17) on line 1347:

\`return self._namespaces.add_namespace(Namespace(namespace_or_prefix, uri))\`

There is no validation of IRI in both Namespace constructor and NamespaceManager#add_namespace().

When serializing PROV-N format, there is no validation of IRI.
However, this is not wrong since the serializer should not expect Prov Python to generate a PROV document with an invalid IRI. The problem arises in the model where an invalid IRI can be generated. 

When deserializing from PROV-N, ProvToolbox uses deserializer which uses parser generated by [ANTLR](https://www.antlr.org/) with this [grammar](https://github.com/lucmoreau/ProvToolbox/blob/master/modules-core/prov-n/src/main/antlr3/org/openprovenance/prov/notation/PROV_N.g).
The parser reads the IRI and generates a mismatched token as IRI.

Now, when converting this to [Namespace class](https://github.com/lucmoreau/ProvToolbox/blob/master/modules-core/prov-model/src/main/java/org/openprovenance/prov/model/Namespace.java#L18), IRI string in null, but ProvToolbox expects it to be something and String#length() method is called which causes the exception to be thrown:

\`Caused by: java.lang.NullPointerException: Cannot invoke "String.length()" because "s" is null at org.openprovenance.prov.notation.TreeTraversal.unwrap(TreeTraversal.java:686)\`