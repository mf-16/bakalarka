When creating entity in memory, Python uses [ProvBundle#entity()](https://github.com/trungdong/prov/blob/1cb710a26c623c5c706b1c6945c645efd9e925c0/src/prov/model.py#L1623), which just calls [ProvBundle#new_record()](https://github.com/trungdong/prov/blob/1cb710a26c623c5c706b1c6945c645efd9e925c0/src/prov/model.py#L1578) method with identifier \`ex:a b c\`:

\`return self.new_record(PROV_ENTITY, identifier, None, other_attributes)\`

In ProvBundle#new_record(), when creating new record with identifier, [ProvBundle#valid_qualified_name()](https://github.com/trungdong/prov/blob/1cb710a26c623c5c706b1c6945c645efd9e925c0/src/prov/model.py#L1357) method is called on line 1604:
\`\`\`
new_record = PROV_REC_CLS[record_type](
    self, self.valid_qualified_name(identifier), attr_list
)
\`\`\`

ProvBundle#valid_qualified_name() just calls [NamespaceManager#valid_qualified_name()](https://github.com/trungdong/prov/blob/1cb710a26c623c5c706b1c6945c645efd9e925c0/src/prov/model.py#L1139). There is no validation of QualifiedName in this method. 

When serializing JSON format, there is no validation of identifier.
But this is not wrong, since the serializer should not expect that PROV document with invalid identifier can be generated by Java. Its the model where invalid QualifiedName can be generated, where the issue starts.

Therefore, Python creates document with invalid identifier.

When deserializing JSON format, Java uses [jackson](https://github.com/FasterXML/jackson) library.
When deserializing the identifier, Java uses [CustomQualifiedNameDeserializer#deserialize()](https://github.com/lucmoreau/ProvToolbox/blob/ca05849c88a84aae736355569a8bdae78c68b072/modules-core/prov-jsonld/src/main/java/org/openprovenance/prov/core/json/serialization/deserial/CustomQualifiedNameDeserializer.java#L40) method, which uses [Namespace#stringToQualifiedName()](https://github.com/lucmoreau/ProvToolbox/blob/ca05849c88a84aae736355569a8bdae78c68b072/modules-core/prov-model/src/main/java/org/openprovenance/prov/model/Namespace.java#L220) on line 43:

\`return ns.stringToQualifiedName(s, pf, false);\`

Namespace#stringToQualifiedName() method does no validation of identifier.

Therefore, Java creates document with invalid identifier.