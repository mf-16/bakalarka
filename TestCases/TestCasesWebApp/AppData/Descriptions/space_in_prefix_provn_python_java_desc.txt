Python when creating the document in memory uses def add_namespace(self, namespace): method, which does not validate the prefix, so it allows prefix with the space.

Python when serializing in PROVN just writes all namespaces and does no validation
if registered_namespaces:
            lines.extend(
                [
                    "prefix %s <%s>" % (namespace.prefix, namespace.uri)
                    for namespace in registered_namespaces
                ]
            )

Java when deserializing with the deserializer generated by ANTLR, when reading the "ex ex" prefix, only reads the part until first space. Therefore, 2 namespaces named "ex" are produced.
Java can deal with this and assigns differnt name to the other one. But the problem starts when its reading the entity with prefix "ex ex" in identifier. It reads the part until first space as well.
So entity with identifier "ex" is read. This means that default namespace is expected because no prefix is provided. That is why the exception is throws:
Null namespace for ex at org.openprovenance.prov.model.Namespace.stringToQualifiedName(Namespace.java:236)

This means that Java when deserializing does not count with wrong prefix being passed, which is not particulary wrong.