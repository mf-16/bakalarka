In Python, every record is subclass of [ProvRecord](https://github.com/trungdong/prov/blob/1cb710a26c623c5c706b1c6945c645efd9e925c0/src/prov/model.py#L228). ProvRecord represents prov:value attributes in the _attributes dictionary
In [constructor](https://github.com/trungdong/prov/blob/1cb710a26c623c5c706b1c6945c645efd9e925c0/src/prov/model.py#L236), on line 246, the _attributes dictionary is intialized: 

\`self._attributes = defaultdict(set)\`


This means that the values will be of type set, therefore more prov:value attributes are possible which is not complaint with the PROV-DM which states:
["The attribute prov:value may occur at most once in a set of attribute-value pairs."](https://www.w3.org/TR/prov-dm/#term-attribute-value)

When serializing JSON format, there is no validation if prov:value is only used once.
But this is not wrong, since the serializer should not expect that PROV document with multiple prov:value attributes can be generated by Python. Its the model where every ProvRecord represent value as set, where the problem starts.

When deserializing XML format, Java uses [jackson](https://github.com/FasterXML/jackson) library.
Java reads all 3 values and calls method [Entity#setIndexedAttributes()](https://github.com/lucmoreau/ProvToolbox/blob/20a9edf219e84c383d28283bc199d9ac32903687/modules-core/prov-model/src/main/java/org/openprovenance/prov/vanilla/Entity.java#L162) on each one of them.

The [Entity](https://github.com/lucmoreau/ProvToolbox/blob/20a9edf219e84c383d28283bc199d9ac32903687/modules-core/prov-model/src/main/java/org/openprovenance/prov/vanilla/Entity.java) class in Java has private field [value](https://github.com/lucmoreau/ProvToolbox/blob/20a9edf219e84c383d28283bc199d9ac32903687/modules-core/prov-model/src/main/java/org/openprovenance/prov/vanilla/Entity.java#L22).
This means that prov:value may occur at most once and is compliant with the PROV-DM.

On line 165 [ProvUtilities#distribute()](https://github.com/lucmoreau/ProvToolbox/blob/20a9edf219e84c383d28283bc199d9ac32903687/modules-core/prov-model/src/main/java/org/openprovenance/prov/vanilla/ProvUtilities.java#L94) method is called.

\`u.distribute((QualifiedName)qn,attributes,getLabel(),values_discard,getLocation(),getType(),roles_discard,getOther());\`

ProvUtilities#distribute() just puts the newest prov:value to values_discard on line 122:
\`\`\`
if (PROV_VALUE_URI.equals(uri)) {
    for (Attribute attr: attributes) {
        values.add((org.openprovenance.prov.model.Value)attr);
    }
    return;
}
\`\`\`
This is done n-times, where n is number of prov:value attributes. Therefore, the last prov:value is serialized as opposed to PROVN where the first prov:value is serialized.