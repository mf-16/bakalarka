In Python every records is a subclass of ProvRecord, which has value property

@property
    def value(self):
        """Value of the record."""
        return self._attributes[PROV_VALUE]

value property is a set because _attributes is a defaultdict, where values are sets:
self._attributes = defaultdict(set)

So every ProvRecord object has a value property. This is why prov:value is serialized as well, which is not compatible with PROV-N.

Java when deserializing in PROVN using the deserializer generated by ANLTR, reads the prov:value as a token, but when creating new activity it uses method public void setAttributes(HasOther res, Collection<Attribute> attributes), which always checks if the object implements HasValue like this:

HasValue aval = res instanceof HasValue ? (HasValue)res : null;
when it does not implement HasValue, in our case Activity, just ignore it.
case PROV_VALUE:
                            if (aval != null) {
                                aval.setValue(this.newValue(aValue, attr.getType()));
                            }
                            break;
So the prov:value attribute is ignored.




