When serializing to PROV-N, ProvToolbox uses the [custom ProvSerializer](https://github.com/lucmoreau/ProvToolbox/blob/master/modules-core/prov-n/src/main/java/org/openprovenance/prov/notation/ProvSerialiser.java).
When ProvToolbox serializes the wasGeneratedBy record without id, it uses the [NotationConstructor#newWasGeneratedBy()](https://github.com/lucmoreau/ProvToolbox/blob/96dd235aba6072c6e7671929b57b61088b9f6a38/modules-core/prov-n/src/main/java/org/openprovenance/prov/notation/NotationConstructor.java#L387) method.

\`\`\`
String s = keyword("wasGeneratedBy") + "(" + optionalId(id)
                + idOrMarker(entity) + "," + idOrMarker(activity) + ","
                + timeOrMarker(time) + optionalAttributes(attributes) + ")";
\`\`\`

On line 392 [NotationConstructor#optionalId()](https://github.com/lucmoreau/ProvToolbox/blob/96dd235aba6072c6e7671929b57b61088b9f6a38/modules-core/prov-n/src/main/java/org/openprovenance/prov/notation/NotationConstructor.java#L489) is called. This method does not add an identifier if the identifier is not present.

This is valid according to how optional identifiers should look in [PROV-N](https://www.w3.org/TR/prov-n/#prov-n-standard-terms)

PROV-N deserialization in Prov Python has not yet been implemented. 
As stated in [Prov Python features](https://pypi.org/project/prov/), "In-memory classes for PROV assertions, which can then be output as PROV-N," implying that only PROV-N serialization is supported.
It has been worked on but abandoned, as you can see in this issue on the library's [github](https://github.com/trungdong/prov/issues/122).

