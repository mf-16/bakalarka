When new namespace is created in memory [Namespace#register()](https://github.com/lucmoreau/ProvToolbox/blob/ca05849c88a84aae736355569a8bdae78c68b072/modules-core/prov-model/src/main/java/org/openprovenance/prov/model/Namespace.java#L124) is used. This method does no validation of the URI.
Therefore, Java allows document with URI with space to be created in memory. 

When serializing XML format, there is no validation of URI.
But this is not wrong, since the serializer should not expect that PROV document with invalid URI can be generated by Java. Its the model where invalid URI can be generated, where the issue starts.

When deserializing XML format, Python uses custom [ProvXMLSerializer](https://github.com/trungdong/prov/blob/master/src/prov/serializers/provxml.py#L34).
When deserializing it uses the [ProvXMLSerializer#deserialize()](https://github.com/trungdong/prov/blob/1cb710a26c623c5c706b1c6945c645efd9e925c0/src/prov/serializers/provxml.py#L218) method, which on line 229 uses [etree](https://lxml.de/tutorial.html) from [lxml](https://lxml.de/) library to obtain the etree Element object like this:

\`xml_doc = etree.parse(buf).getroot()\`

When using the [parse()](https://lxml.de/tutorial.html#the-parse-function) function, it does validate the URI somewhere, therefore we get exception:

\`lxml.etree.XMLSyntaxError: xmlns:ex: 'http://www.w3. org/ns/prov#' is not a valid URI, line 3, column 51\`
