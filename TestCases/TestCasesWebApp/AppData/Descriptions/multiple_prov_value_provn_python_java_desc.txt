In Prov Python, every record is subclass of [ProvRecord](https://github.com/trungdong/prov/blob/1cb710a26c623c5c706b1c6945c645efd9e925c0/src/prov/model.py#L228). ProvRecord represents the prov:value attributes as the _attributes dictionary.
In [constructor](https://github.com/trungdong/prov/blob/1cb710a26c623c5c706b1c6945c645efd9e925c0/src/prov/model.py#L236), on line 246, the _attributes dictionary is intialized: 

\`self._attributes = defaultdict(set)\`

This means that the values will be of the type set therefore, more prov:value attributes are possible, which is not compliant with the PROV-DM, which states:
["The attribute prov:value may occur at most once in a set of attribute-value pairs."](https://www.w3.org/TR/prov-dm/#term-attribute-value)

Prov Python does not validate if prov:value is only used once when serializing to PROV-N.
However, this is not wrong since the serializer should not expect Prov Python to generate a PROV document with multiple prov:value attributes. The problem arises in the model with numerous prov:value attributes can be generated.

When deserializing from PROV-N, ProvToolbox uses deserializer which uses parser generated by [ANTLR](https://www.antlr.org/) with this [grammar](https://github.com/lucmoreau/ProvToolbox/blob/master/modules-core/prov-n/src/main/antlr3/org/openprovenance/prov/notation/PROV_N.g).
The parser reads all three prov:value attributes, but when creating the document in ProvToolbox, Entity class constructor is used:

The [Entity](https://github.com/lucmoreau/ProvToolbox/blob/20a9edf219e84c383d28283bc199d9ac32903687/modules-core/prov-model/src/main/java/org/openprovenance/prov/vanilla/Entity.java) class in ProvToolbox has a private field [value](https://github.com/lucmoreau/ProvToolbox/blob/20a9edf219e84c383d28283bc199d9ac32903687/modules-core/prov-model/src/main/java/org/openprovenance/prov/vanilla/Entity.java#L22).
This means that prov:value attribute may occur at most once, which complies with the PROV-DM.
When trying to put multiple prov:value attributes in ProvToolbox, when creating the entity in [constructor](https://github.com/lucmoreau/ProvToolbox/blob/20a9edf219e84c383d28283bc199d9ac32903687/modules-core/prov-model/src/main/java/org/openprovenance/prov/vanilla/Entity.java#L31):
On line 39, the [ProvUtilities#populateAttributes()](https://github.com/lucmoreau/ProvToolbox/blob/20a9edf219e84c383d28283bc199d9ac32903687/modules-core/prov-model/src/main/java/org/openprovenance/prov/vanilla/ProvUtilities.java#L141) method is used

\`u.populateAttributes(attributes, labels, location, type, new LinkedList<>(), other, valueHolder);\`

It iterates through all attributes and assigns only the first occurrence of prov:value like this in switch on line 165:
\`\`\`
case PROV_VALUE:
    if (!foundValue) {
        foundValue = true;
        value[0] = (org.openprovenance.prov.model.Value)attribute;
    }
\`\`\`


And then, in the constructor, prov:value is assigned on line 40:

\`value=Optional.ofNullable(valueHolder[0]);\`

This means that the first prov:value in attributes will be the entity's prov:value.

In ProvToolbox, when creating a document for comparison, it can't create a document with multiple prov:value attributes. More about this in

\`\`\`
name: Multiple prov value
format: PROVN
serialize: java
deserialize: python
\`\`\`

Therefore, ProvToolbox compares both documents with one prov:value, and the result says that they are equal, but they are not.