In ProvToolbox, records that can have prov:value as attribute (only entity) implement interface [HasValue](https://github.com/lucmoreau/ProvToolbox/blob/20a9edf219e84c383d28283bc199d9ac32903687/modules-core/prov-model/src/main/java/org/openprovenance/prov/model/HasValue.java).

Only [Entity](https://github.com/lucmoreau/ProvToolbox/blob/20a9edf219e84c383d28283bc199d9ac32903687/modules-core/prov-model/src/main/java/org/openprovenance/prov/model/Entity.java) class implements HasValue interface since PROV-DM states that prov:value attribute [should only be in entity](https://www.w3.org/TR/prov-dm/#term-attribute-value).
Therefore, no other record can have prov:value attribute, which is compatible with PROV-DM.
This is enforced in [ProvFactory#setAttributes()](https://github.com/lucmoreau/ProvToolbox/blob/20a9edf219e84c383d28283bc199d9ac32903687/modules-core/prov-model/src/main/java/org/openprovenance/prov/model/ProvFactory.java#L1600) method. So when trying to create a document with prov:value, this method always checks if the object implements HasValue on line 1606:

\`HasValue aval=(res instanceof HasValue)? (HasValue)res : null;\`

When it does not implement HasValue, in our case [Activity](https://github.com/lucmoreau/ProvToolbox/blob/20a9edf219e84c383d28283bc199d9ac32903687/modules-core/prov-model/src/main/java/org/openprovenance/prov/model/Activity.java), just ignore it on line 1646.
\`\`\`
case PROV_VALUE:
    if (aval!=null) {
        aval.setValue(newValue(aValue,attr.getType()));
    }
    break;
\`\`\`

So, the serialized document has no value.

When deserializing from PROV-XML, Prov Python uses custom [ProvXMLSerializer](https://github.com/trungdong/prov/blob/master/src/prov/serializers/provxml.py#L34).
When deserializing it uses the [ProvXMLSerializer#deserialize()](https://github.com/trungdong/prov/blob/1cb710a26c623c5c706b1c6945c645efd9e925c0/src/prov/serializers/provxml.py#L218) method, which on line 229 uses [etree](https://lxml.de/tutorial.html) from [lxml](https://lxml.de/) library to obtain the etree Element object like this:

\`xml_doc = etree.parse(buf).getroot()\`

After that, on line 239, it uses the [ProvXMLSerializer#deserialize_subtree()](https://github.com/trungdong/prov/blob/master/src/prov/serializers/provxml.py#L242) method, which fills the ProvDocument it gets passed in arguments from the etree Element object.

\`self.deserialize_subtree(xml_doc, document)\`

Prov Python has no problem deserializing this document.
