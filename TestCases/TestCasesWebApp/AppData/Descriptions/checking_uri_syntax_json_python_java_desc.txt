Prov Python allows the creation of a document with an invalid IRI in memory. When registering a namespace in Prov Python, we use [ProvBundle#add_namespace()](https://github.com/trungdong/prov/blob/1cb710a26c623c5c706b1c6945c645efd9e925c0/src/prov/model.py#L1335) method, which just uses [NamespaceManager#add_namespace()](https://github.com/trungdong/prov/blob/master/src/prov/model.py#L1080) method and [Namespace constructor](https://github.com/trungdong/prov/blob/1cb710a26c623c5c706b1c6945c645efd9e925c0/src/prov/identifier.py#L85C9-L85C17) on line 1347:

\`return self._namespaces.add_namespace(Namespace(namespace_or_prefix, uri))\`

There is no validation of IRI in both Namespace constructor and NamespaceManager#add_namespace().

When serializing PROV-JSON format, there is no validation of IRI.
However, this is not wrong since the serializer should not expect Prov Python to generate a PROV document with an invalid IRI. The problem arises in the model where an invalid IRI can be generated. 

ProvToolbox uses [jackson](https://github.com/FasterXML/jackson) library when deserializing from PROV-JSON.
When deserializing namespaces ProvToolbox uses [CustomNamespacePrefixDeserializer#deserialize()](https://github.com/lucmoreau/ProvToolbox/blob/96dd235aba6072c6e7671929b57b61088b9f6a38/modules-core/prov-jsonld/src/main/java/org/openprovenance/prov/core/json/serialization/deserial/CustomNamespacePrefixDeserializer.java#L34). On line 53:

\`ns.register(prefix,namespace);\`

[Namespace#register()](https://github.com/lucmoreau/ProvToolbox/blob/ca05849c88a84aae736355569a8bdae78c68b072/modules-core/prov-model/src/main/java/org/openprovenance/prov/model/Namespace.java#L124) is used. This method does not validate the IRI.
Therefore,  ProvToolbox allows documents with IRI with space to be created.