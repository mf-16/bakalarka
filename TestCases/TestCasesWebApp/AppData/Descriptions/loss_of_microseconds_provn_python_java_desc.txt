When creating the document in Python using
document.activity("ex:a", "2023-09-08T14:12:45.10931231236545213876", "2023-09-08T14:12:45.109321321312321432523")
This parses the time calling the def _ensure_datetime(value): method which uses dateutil.parser for parsing xsd datetimes.
The dateutil.parser converts microseconds like this:
int(f.ljust(6, "0")[:6]
This means that microseconds will always be 6 characters long. Therefore, some precision is lost.

When deserializing in Java, which was generated by ANTLR this method is called when converting times.
public XMLGregorianCalendar newISOTime(String time) {
        return this.newTime(DatatypeConverter.parseDateTime(time).getTime());
    }
DatatypeConverter.parseDateTime(time).getTime() this expresion right here returns the as Date. Date has field millis stored as int which represents the microseconds.
This is how the field is set:
 // TODO: Non-optimal solution for now.
// Efficient implementation would only store as BigDecimal
// when needed and millisecond otherwise.
fractionalSecond.movePointRight(3).intValue();

Where fractionalSecond is BigDecimal in our case 0.109312. You can also see the //TODO comment saying that this is not optimal solution as we can see, because of the lost precision.
