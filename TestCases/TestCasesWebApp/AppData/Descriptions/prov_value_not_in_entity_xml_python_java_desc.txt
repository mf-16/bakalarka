In Prov Python, every record is a subclass of [ProvRecord](https://github.com/trungdong/prov/blob/master/src/prov/model.py#L228), which has [value property](https://github.com/trungdong/prov/blob/master/src/prov/model.py#L361).
value property is a set, because _attributes is a [defaultdict](https://docs.python.org/3/library/collections.html#collections.defaultdict), where values are sets. It is constructed in [ProvRecord constructor](https://github.com/trungdong/prov/blob/1cb710a26c623c5c706b1c6945c645efd9e925c0/src/prov/model.py#L236) on line 246:

\`self._attributes = defaultdict(set)\`

Therefore, every ProvRecord object in Prov Python has a value property. In memory, you can create a record that is not an entity and has a prov:value attribute, which is not compatible with PROV-DM because PROV-DM states that prov:value attribute [can only be in entity](https://www.w3.org/TR/prov-dm/#term-attribute-value).

When serializing to PROV-XML, there is no validation if the prov:value attribute is used in a record other than an entity.
However, this is not wrong since the serializer should not expect Prov Python to generate a  PROV document with prov:value in activity. The problem arises in the model where every ProvRecord has prov:value attribute.

ProvToolbox uses [jackson](https://github.com/FasterXML/jackson) library when deserializing from PROV-XML.
ProvToolbox finds the prov:value XML element and calls method [Activity#setIndexedAttributes()](https://github.com/lucmoreau/ProvToolbox/blob/20a9edf219e84c383d28283bc199d9ac32903687/modules-core/prov-model/src/main/java/org/openprovenance/prov/vanilla/Activity.java#L190)

On line 193, the [TheProvUtilities#distribute()](https://github.com/lucmoreau/ProvToolbox/blob/20a9edf219e84c383d28283bc199d9ac32903687/modules-core/prov-model/src/main/java/org/openprovenance/prov/vanilla/ProvUtilities.java#L94) method adds the value into the values_discard list, which was passed as argument.

\`u.distribute((QualifiedName)qn,attributes,getLabel(),values_discard,getLocation(),getType(),roles_discard,getOther());\`

Then, it just ignores the values_discard list and does not set anything. That is why the prov:value attribute is ignored.

The equals returns true, but it is because, in ProvToolbox, you cannot create a document in memory with the prov:value attribute in a record other than an entity. More about this in:

\`\`\`
-name: Prov value not in entity
-format: PROVN
-serialize: java
-deserialize: python

